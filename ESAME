## ESAME CAIRNS ##

library(raster) 
library(rasterVis) # posso utilizzare la funzione levelplot
library(rgdal) # mi permette di analizzare le firme spettrali
library(ggplot2) # mi permette l'uso delle funzioni ggplot
library(RStoolbox)# permette l'uso della Unsupervised Classification
library(gridExtra)   # permette l'uso e creazione di tabelle e grafici, da aggiugere a ggplot2 perchÃ¨ la funzione par in ggplot 2 non funge
library(grid)

library(mapedit) 
library(mapview)

setwd("D:/lab/asc")

## INDICE
# 1: importazione immagini satellitari (x mese e anno)
#
#
# 4: Raggruppamento degli anni per banda
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Lista bande utilizzate

# Landsat 4/5 spectral bands:  
# nBanda = freq    -->  nome riassegnato 
# Band 1 = Blue    -->   [[1]]
# Band 2 = Green   -->    [[2]]
# Band 3 = Red     -->    [[3]]
# Band 4 = NIR     -->    [[4]]
# Band 5 = SWIR-1  -->   [[5]]
# Band 6 = Thermal infrared   --> removed
# Band 7 = SWIR-2  -->  B7  [[6]]

# Landsat 8 spectral bands:
# Band 1 = Coastal / Aerosol  --> removed
# Band 2 = Blue         B1     [[1]]
# Band 3 = Green        B2     [[2]]
# Band 4 = Red          B3     [[3]]
# Band 5 = NIR          B4     [[4]]
# Band 6 = SWIR-1       B5     [[5]]
# Band 7 = SWIR-2       B7     [[6]]

------------------------------------------------------------------------------------------------------------
#### 1. IMPORTAZIONE IMMAGINI SATELLITARI X MESE e ANNO  ####


#immagine del 29/06/1987, creo una lista delle bande con un pattern, la importo e creo un file unico con le varie bande 
list87 <-list.files(pattern="19870629")
imp87 <-lapply(list87, raster)
asc87 <- stack(imp87)

#immagine del 28/07/1992
list92 <-list.files(pattern="19920728")
imp92 <-lapply(list92, raster)
asc92 <- stack(imp92)

#immagine del 24/06/1997
list97 <-list.files(pattern="19970624")
imp97 <-lapply(list97, raster)
asc97 <- stack(imp97)

#immagine del 08/07/2002
list02 <-list.files(pattern="20020708")
imp02 <-lapply(list02, raster)
asc02 <- stack(imp02)

#immagine del 17/07/2011
list11 <-list.files(pattern="20110717")
imp11 <-lapply(list11, raster)
asc11 <- stack(imp11)

#immagine del 12/07/2021
list21 <-list.files(pattern="20210712")
imp21 <-lapply(list21, raster)
asc21 <- stack(imp21)

#ritaglio con la funzione crop l'area dell'immagine che mi interessa
e <- extent(350000,480000,3280000,3420000)
asc87_crop <- crop(asc87, e)
asc92_crop <- crop(asc92, e)
asc97_crop <- crop(asc97, e)
asc02_crop <- crop(asc02, e)
asc11_crop <- crop(asc11, e)
asc21_crop <- crop(asc21, e)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# confronto dei diverse anni con diverse combinazioni di colori attraverso plottaggio in RGB 

# plottaggio con colori naturali 
par(mfrow=c(2,3)) mar(2,2,2,2)
plotRGB(asc87_crop, 3, 2, 1, stretch="lin", axes=T, main="1987")
plotRGB(asc92_crop, 3, 2, 1, stretch="lin", axes=T, main="1992")
plotRGB(asc97_crop, 3, 2, 1, stretch="lin", axes=T, main="1997")
plotRGB(asc02_crop, 3, 2, 1, stretch="lin", axes=T, main="2002")
plotRGB(asc11_crop, 3, 2, 1, stretch="lin", axes=T, main="2011")
plotRGB(asc21_crop, 3, 2, 1, stretch="lin", axes=T, main="2021")

#plottaggio con R= Nir, G= Red, B= blue
par(mfrow=c(3,2))
plotRGB(asc87_crop, 4, 3, 1, stretch="lin", axes=T, main="1987")
plotRGB(asc92_crop, 4, 3, 1, stretch="lin", axes=T, main="1992")
plotRGB(asc97_crop, 4, 3, 1, stretch="lin", axes=T, main="1997")
plotRGB(asc02_crop, 4, 3, 1, stretch="lin", axes=T, main="2002")
plotRGB(asc11_crop, 4, 3, 1, stretch="lin", axes=T, main="2011")
plotRGB(asc21_crop, 4, 3, 1, stretch="lin", axes=T, main="2021")

#Plottaggio con R= Nir, G= red, B= green 
#par(mfrow=c(2,3))
#plotRGB(ady86_crop, 4, 3, 2, stretch="lin", axes=T, main="1986")
#plotRGB(ady96_crop, 4, 3, 2, stretch="lin", axes=T, main="1996")
#plotRGB(ady06_crop, 4, 3, 2, stretch="lin", axes=T, main="2006")
#plotRGB(ady16_crop, 4, 3, 2, stretch="lin", axes=T, main="2016")
#plotRGB(ady21_crop, 4, 3, 2, stretch="lin", axes=T, main="2021")


## CALCOLO DELL'NDVI ##
# NDVI = (NIR - red)/(NIR + red)

NDVI87 <- (asc87_crop[[4]] - asc87_crop[[3]]) / (asc87_crop[[4]] + asc87_crop[[3]])
NDVI92 <- (asc92_crop[[4]] - asc92_crop[[3]]) / (asc92_crop[[4]] + asc92_crop[[3]])
NDVI97 <- (asc97_crop[[4]] - asc97_crop[[3]]) / (asc97_crop[[4]] + asc97_crop[[3]])
NDVI02 <- (asc02_crop[[4]] - asc02_crop[[3]]) / (asc02_crop[[4]] + asc02_crop[[3]])
NDVI11 <- (asc11_crop[[4]] - asc11_crop[[3]]) / (asc11_crop[[4]] + asc11_crop[[3]])
NDVI21 <- (asc21_crop[[4]] - asc21_crop[[3]]) / (asc21_crop[[4]] + asc21_crop[[3]])

#cl <- colorRampPalette(c("white","grey","black","red"))(100)
#changer <- colorRampPalette(c("steelblue3","black","yellow"))(100)


NDVI87_lvl <- levelplot(NDVI87)
NDVI92_lvl <- levelplot(NDVI92)
NDVI97_lvl <- levelplot(NDVI97)
NDVI02_lvl <- levelplot(NDVI02)
NDVI11_lvl <- levelplot(NDVI11)
NDVI21_lvl <- levelplot(NDVI21)

grid.arrange(NDVI87_lvl, NDVI92_lvl, NDVI97_lvl, nrow=1)
grid.arrange(NDVI02_lvl, NDVI11_lvl, NDVI21_lvl, nrow=1)


#DIFFERENZA NDVI

#difndvi <- NDVI87 - NDVI21
-----------------------------------------------------------------------------------------------------------------------------------------------------
# __________Bare Soil Index (BSI)_____________________________________________________________________________________________________________________________________________

# BSI = (SWIR1+Red)-(NIR+Blue)/(SWIR1+Red)+(NIR+Blue)

BSI86 <- (asc87_crop[[5]] - asc87_crop[[3]]) / (asc87_crop[[4]] + asc87_crop[[1]])
BSI96 <- (asc92_crop[[5]] - asc92_crop[[3]]) / (asc92_crop[[4]] + asc92_crop[[1]])
BSI06 <- (asc97_crop[[5]] - asc97_crop[[3]]) / (asc97_crop[[4]] + asc97_crop[[1]])
BSI16 <- (asc02_crop[[5]] - asc02_crop[[3]]) / (asc02_crop[[4]] + asc02_crop[[1]])
BSI11 <- (asc11_crop[[5]] - asc11_crop[[3]]) / (asc11_crop[[4]] + asc11_crop[[1]])
BSI21 <- (asc21_crop[[5]] - asc21_crop[[3]]) / (asc21_crop[[4]] + asc21_crop[[1]])

# Bare sandy beaches without any vegetation are shown at one extremity and urbanized areas are at the other extremity.
# Urban areas have a slightly more extreme value compared to vegetation.

tropical <- colorRampPalette(c("pink","navy","yellow"))(100)

# To make a simple plot:
#par(mfrow=c(1,2))
#plot(BSI86, col=tropical)
#plot(BSI21, col=tropical)

# Faccio un levelplot:
#BSI86_lvl <- levelplot(BSI86, col.regions=tropical, main="BSI nel 1986")
#BSI21_lvl <- levelplot(BSI21, col.regions=tropical, main="BSI nel 2021")
#grid.arrange(BSI86_lvl, BSI21_lvl, nrow=1)



#BSIdiff <- BSI21-BSI86
#tropinv <- colorRampPalette(c("yellow","navy","white"))(100)
#plot(BSIdiff, col=tropinv)

# To create a levelplot showing the difference between the first and last year studied:
#levelplot(BSIdiff, col.regions=tropinv, main="Differenza nel BSI tra \n l'anno 1986 e il 2021"



-----------------------------------------------------------------------------------------------------------------------------------------------------
# calcolo(PCA)
# Prima del calcolo uso la funzione aggregate per cambiare la grandezza delle immagini di unfact=10

asc87_res <- aggregate(asc87_crop, fact=10) 
asc92_res <- aggregate(asc92_crop, fact=10) 
asc97_res <- aggregate(asc97_crop, fact=10) 
asc02_res <- aggregate(asc02_crop, fact=10) 
asc11_res <- aggregate(asc11_crop, fact=10) 
asc21_res <- aggregate(asc21_crop, fact=10) 

#Ora sono pronto per il calcolo della PCA

asc87_pca <- rasterPCA(asc87_res) 
asc92_pca <- rasterPCA(asc92_res)
asc97_pca <- rasterPCA(asc97_res)
asc02_pca <- rasterPCA(asc02_res)
asc11_pca <- rasterPCA(asc11_res)
asc21_pca <- rasterPCA(asc21_res)

# uso l'opzione summary per lo studio delle componenti

summary(asc87_pca$model)
Importance of components:
                             Comp.1       Comp.2       Comp.3       Comp.4       Comp.5       Comp.6
Standard deviation     8180.8992914 3441.1606272 1.581357e+03 4.756984e+02 2.642683e+02 6.918789e+01
Proportion of Variance    0.8204838    0.1451703 3.065686e-02 2.774159e-03 8.561665e-04 5.868514e-05
Cumulative Proportion     0.8204838    0.9656541 9.963110e-01 9.990851e-01 9.999413e-01 1.000000e+00

summary(asc92_pca$model)
Importance of components:
                             Comp.1       Comp.2       Comp.3       Comp.4       Comp.5       Comp.6
Standard deviation     6548.2849684 3671.5205098 1676.6232779 6.321050e+02 3.330537e+02 1.153965e+02
Proportion of Variance    0.7183192    0.2258158    0.0470905 6.693308e-03 1.858193e-03 2.230734e-04
Cumulative Proportion     0.7183192    0.9441349    0.9912254 9.979187e-01 9.997769e-01 1.000000e+00

summary(asc97_pca$model)
Importance of components:
                             Comp.1       Comp.2       Comp.3       Comp.4       Comp.5       Comp.6
Standard deviation     1.084591e+04 3052.4437309 1829.5417083 9.335905e+02 4.217779e+02 1.500711e+02
Proportion of Variance 8.954357e-01    0.0709248    0.0254793 6.634614e-03 1.354161e-03 1.714340e-04
Cumulative Proportion  8.954357e-01    0.9663605    0.9918398 9.984744e-01 9.998286e-01 1.000000e+00

summary(asc02_pca$model)
Importance of components:
                             Comp.1       Comp.2       Comp.3       Comp.4      Comp.5       Comp.6
Standard deviation     1.009951e+04 3.386919e+03 1.809350e+03 9.468640e+02 418.9535827 149.78478891
Proportion of Variance 8.655844e-01 9.734605e-02 2.778139e-02 7.608233e-03   0.0014895   0.00019039
Cumulative Proportion  8.655844e-01 9.629305e-01 9.907119e-01 9.983201e-01   0.9998096   1.00000000

summary(asc11_pca$model)
Importance of components:
                             Comp.1       Comp.2       Comp.3       Comp.4       Comp.5       Comp.6
Standard deviation     1.012266e+04 3743.2460171 1929.9758364 1.365083e+03 4.271252e+02 1.494021e+02
Proportion of Variance 8.380273e-01    0.1145950    0.0304630 1.524006e-02 1.492036e-03 1.825503e-04
Cumulative Proportion  8.380273e-01    0.9526223    0.9830853 9.983254e-01 9.998174e-01 1.000000e+00

summary(asc21_pca$model)
Importance of components:
                             Comp.1       Comp.2       Comp.3       Comp.4       Comp.5       Comp.6
Standard deviation     5267.3318780 2436.9964731 1.785421e+03 1.410675e+03 4.611047e+02 1.499936e+02
Proportion of Variance    0.7096473    0.1519046 8.153468e-02 5.089966e-02 5.438264e-03 5.754487e-04
Cumulative Proportion     0.7096473    0.8615519 9.430866e-01 9.939863e-01 9.994246e-01 1.000000e+00


--------------------------------------------
par(mfrow=c(2,3))
plotRGB(asc87_pca$map, 1, 2, 3, stretch="Lin")
plotRGB(asc92_pca$map, 1, 2, 3, stretch="Lin")
plotRGB(asc97_pca$map, 1, 2, 3, stretch="Lin")
plotRGB(asc02_pca$map, 1, 2, 3, stretch="Lin")
plotRGB(asc11_pca$map, 1, 2, 3, stretch="Lin")
plotRGB(asc21_pca$map, 1, 2, 3, stretch="Lin")

plot(asc87_pca$model)
plot(asc92_pca$model)
plot(asc97_pca$model)
plot(asc02_pca$model)
plot(asc11_pca$model)
plot(asc21_pca$model)

#tropical <- colorRampPalette(c("pink","navy","yellow"))(100)

#non funziona
#par(mfrow=c(2,3))
#plot(ady86_pca[[1]]$map, col=tropical)
#plot(ady96_pca[[1]]$map, col=tropical)
#plot(ady06_pca[[1]]$map, col=tropical)
#plot(ady16_pca[[1]]$map, col=tropical)
#plot(ady21_pca[[1]]$map, col=tropical)


 Comparison PCA 1986-2021
par(mfrow=c(2,3))
plotRGB(asc87_pca$map, 1, 2, 3, stretch="Hist")
plotRGB(asc92_pca$map, 1, 2, 3, stretch="Hist")
plotRGB(asc97_pca$map, 1, 2, 3, stretch="Hist")
plotRGB(asc02_pca$map, 1, 2, 3, stretch="Hist")
plotRGB(asc11_pca$map, 1, 2, 3, stretch="Hist")
plotRGB(asc21_pca$map, 1, 2, 3, stretch="Hist")

--------------------------------------
# multiframe con ggplot

asc87_gg <- ggRGB(asc87_pca$map, 1, 2, 3, stretch="Lin") + ggtitle("Anno 1987") + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
asc92_gg <- ggRGB(asc92_pca$map, 1, 2, 3, stretch="Lin") + ggtitle("Anno 1992") + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
asc97_gg <- ggRGB(asc97_pca$map, 1, 2, 3, stretch="Lin") + ggtitle("Anno 1997") + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
asc02_gg <- ggRGB(asc02_pca$map, 1, 2, 3, stretch="Lin") + ggtitle("Anno 2002") + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
asc11_gg <- ggRGB(asc11_pca$map, 1, 2, 3, stretch="Lin") + ggtitle("Anno 2011") + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
asc21_gg <- ggRGB(asc21_pca$map, 1, 2, 3, stretch="Lin") + ggtitle("Anno 2021") + theme(axis.title.x = element_blank(), axis.title.y = element_blank())

#utilizzo la funzione grid.arrange per visualizzarli assieme 

grid.arrange(asc87_gg, asc92_gg, asc97_gg, asc02_gg, asc11_gg, asc21_gg, nrow=2, top=textGrob("PCA in the years"))   #forse basta anche la funzione top="top label"

------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------
# PC1
#ady86_pc1 <- ady86_pca$map$PC1 
#ady21_pc1 <- ady21_pca$map$PC1
#marz19_pc1 <- marz19_pca$map$PC1
                 
# level.plot di PC1 sfrutto una gamma di colori piÃ¹ ampia e le immagini sono piÃ¹ definite
# visualizziamo inoltre i livelli di contorno     
#levelplot(ady86_pc1)
#levelplot(ady21_pc1)
#levelplot(marz19_pc1)
#dev.off()

# funzione focal moving window
#feb20_mw <-focal (feb20_pc1, w=matrix(1/9, nrow=3, ncol=3), fun=sd)
#marz11_mw <-focal (marz11_pc1, w=matrix(1/9, nrow=3, ncol=3), fun=sd)
#marz19_mw <-focal (marz19_pc1, w=matrix(1/9, nrow=3, ncol=3), fun=sd)

 -------------------------------------------------------------------------------------------------------------------------------------------------------
 ###   UnSuperClass ##  Unsupervised classification       (PROVARE CON PIu CLASSI E SEPARARE QUELLA CHE MI INTERESSA)


set.seed(999)
asc_un87 <- unsuperClass(asc87_crop, nClasses=10)
set.seed(999)
asc_un92 <- unsuperClass(asc92_crop, nClasses=10)
set.seed(999)
asc_un97 <- unsuperClass(asc97_crop, nClasses=10)
set.seed(999)
asc_un02 <- unsuperClass(asc02_crop, nClasses=10)
set.seed(999)
asc_un11 <- unsuperClass(asc11_crop, nClasses=10)
set.seed(999)
asc_un21 <- unsuperClass(asc21_crop, nClasses=10)

tropical <- colorRampPalette(c("blue","green","red","black"))(100)
cl <- colorRampPalette(c("yellow", "red", "pink"))(100) 
# per colorare 
#cols3 <- brewer.pal(3, "Pastel1")

par(mfrow=c(2,3))
plot(asc_un87$map, main="1987", col=tropical)
plot(asc_un92$map, main="1992", col=tropical)
plot(asc_un97$map, main="1997", col=tropical)
plot(asc_un02$map, main="2002", col=tropical)
plot(asc_un11$map, main="2011", col=tropical)
plot(asc_un21$map, main="2021", col=tropical)

#provo unsuperclass con le bande ridotte
set.seed(999)
asc_un87_res <- unsuperClass(asc87_res, nClasses=10)
set.seed(999)
asc_un92_res <- unsuperClass(asc92_res, nClasses=10)
set.seed(999)
asc_un97_res <- unsuperClass(asc97_res, nClasses=10)
set.seed(999)
asc_un02_res <- unsuperClass(asc02_res, nClasses=10)
set.seed(999)
asc_un11_res <- unsuperClass(asc11_res, nClasses=10)
set.seed(999)
asc_un21_res <- unsuperClass(asc21_res, nClasses=10)

par(mfrow=c(2,3))
plot(asc_un87_res$map, main="1987", col=cl)
plot(asc_un92_res$map, main="1992", col=cl)
plot(asc_un97_res$map, main="1997", col=cl)
plot(asc_un02_res$map, main="2002", col=cl)
plot(asc_un11_res$map, main="2011", col=cl)
plot(asc_un21_res$map, main="2021", col=cl)



cls <- colorRampPalette(c("yellow", "light blue", "orange", "green", "dark green"))(100) 
par(mfrow=c(1,2))




par(mfrow=c(2,3),  mar=c(2,2,2,2))
plot(asc_un87_res$map, col=cl)
plot(asc_un92_res$map, col=cl)
plot(asc_un97_res$map, col=cl)
plot(asc_un02_res$map, col=cl)
plot(asc_un11_res$map, col=cl)
plot(asc_un21_res$map, col=cl)

freq(asc_un87_res$map)
freq(asc_un92_res$map)
freq(asc_un97_res$map)
freq(asc_un02_res$map)
freq(asc_un11_res$map)
freq(asc_un21_res$map)


s1 <- 2087293 + 4697269 + 3313430 + 621084
# proporzione di pixel delle quattro classi
freq(d1y$map)                      


#par(mfrow=c(2,3),  mar=c(2,2,2,2))
#plot(ady_un86_res$map, main="1986", col=cols3)
#plot(ady_un96_res$map, main="1996", col=cols3)
#plot(ady_un06_res$map,main="2006", col=cols3)
#plot(ady_un16_res$map,main="2016", col=cols3)
#plot(ady_un21_res$map, main="2021", col=cols3)

### Provo a fare unsuperclass con NDVI ##
---------------------------------------------------------------------------------------------------------

ady_tot <- stack(ady86_res,ady96_res,ady06_res,ady16_res,ady21_res)  #PROBLEMA ESTENSIONE STACK
ady_tot_uns <- unsuperClass(ady_tot, nClasses=4)
plot(ady_tot_uns, col=tropical)
 ---------------------------------------------------------------------------------------------------
  
 set.seed(999)
   ndvi_un_87 <- unsuperClass(NDVI87, nClasses=5)
 set.seed(999)
   ndvi_un_92 <- unsuperClass(NDVI92, nClasses=5)
 set.seed(999)
   ndvi_un_97 <- unsuperClass(NDVI97, nClasses=5)
 set.seed(999)
   ndvi_un_02 <- unsuperClass(NDVI02, nClasses=5)
 set.seed(999)
   ndvi_un_11 <- unsuperClass(NDVI11, nClasses=5)
 set.seed(999)
   ndvi_un_21 <- unsuperClass(NDVI21, nClasses=5)


par(mfrow=c(2,3))
 plot(ndvi_un_87$map, col=cl)
 plot(ndvi_un_92$map, col=cl)
 plot(ndvi_un_97$map, col=cl)
 plot(ndvi_un_02$map, col=cl)
 plot(ndvi_un_11$map, col=cl)
 plot(ndvi_un_21$map, col=cl)
 
 freq(ndvi_un_87$map)
#      value   count
#[1,]     1 6466925
#[2,]     2 1812806
#[3,]     3 4253480
#[4,]     4  790852
#[5,]     5 6902715

 freq(ndvi_un_92$map)
#      value   count
#[1,]     1 2194030
#[2,]     2 7587319
#[3,]     3 1858949
#[4,]     4 8555815
#[5,]     5   30665

 freq(ndvi_un_97$map)
#      value    count
#[1,]     1   137797
#[2,]     2 10212013
#[3,]     3  2483010
#[4,]     4   107915
#[5,]     5  7286043

 freq(ndvi_un_02$map)
#      value   count
#[1,]     1 2413010
#[2,]     2 8057517
#[3,]     3 8975300
#[4,]     4  636892
#[5,]     5  144059

 freq(ndvi_un_11$map)
#      value    count
#[1,]     1   608608
#[2,]     2   420851
#[3,]     3 13065985
#[4,]     4  5753613
#[5,]     5   377721

 freq(ndvi_un_21$map)  ## classe 2-3 desert/terra incolta 1 - 4 - 5 terreni agricoli (1 probable terreni attivi)
#      value    count
#[1,]     1   698849
#[2,]     2  6858142
#[3,]     3 11790383
#[4,]     4   445554
#[5,]     5   433849
#[6,]    NA        1
 
 
 set.seed(999)
k2 <- unsuperClass(NDVI21, nClasses=10)
 plot(k2$map, col=cl)
 
 
 
 
 
 
 par(mfrow=c(1,2))    ##
  plot(ndvi_un_21$map, col=cl)
  plotRGB(asc21_crop, 3, 2, 1, stretch="lin")
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 # CAMBIO DI ESTENSIONE
 
xmin<- c(xmin(extent(ady86_res)), xmin(extent(ady96_res)), xmin(extent(ady06_res)), xmin(extent(ady16_res)), xmin(extent(ady21_res)))         
xmin_new<- max(xmin) #prendo valore massimo

xmax<- c(xmax(extent(ady86_res)), xmax(extent(ady96_res)), xmax(extent(ady06_res)), xmax(extent(ady16_res)), xmax(extent(ady21_res)))        
xmax_new<- min(xmax) #prendo valore minimo

ymin<- c(ymin(extent(ady86_res)), ymin(extent(ady96_res)), ymin(extent(ady06_res)), ymin(extent(ady16_res)), ymin(extent(ady21_res)))           
ymin_new<- max(ymin) #prendo valore massimo

ymax<- c(ymax(extent(ady86_res)), ymax(extent(ady96_res)), ymax(extent(ady06_res)), ymax(extent(ady16_res)), ymax(extent(ady21_res)))           
ymax_new<- min(ymax) #prendo valore minimo 

#controllo quali siano in nuovi valori delle cordinate della nuova estensione
xmin_new
xmax_new
ymin_new
ymax_new

e <- extent(161085, 388785, -2022585, -1815885)

ady86_res_crop <- crop(ady86_res, extent(e))
ady96_res_crop <- crop(ady96_res, extent(e))
ady06_res_crop <- crop(ady06_res, extent(e))
ady16_res_crop <- crop(ady16_res, extent(e))
ady21_res_crop <- crop(ady21_res, extent(e))

#guardo se hanno stessa estensione
# extent(ady86_res_crop)
# extent(ady21_res_crop)

ady_tot <- stack(ady86_res_crop, ady96_res_crop, ady06_res_crop, ady16_res_crop,ady21_res_crop)
ady_tot # informazione...stack con tutte le bande di tutti gli anni

# proseguo con Unsuperclass
#  Faccio un unsuperclass dello stacc selezionando le bande dei vari anni #

set.seed(1)
ady_tot_uns86 <- (unsuperClass(ady_tot[[1]] + ady_tot[[2]] + ady_tot[[3]] + ady_tot[[4]] + ady_tot[[5]] + ady_tot[[6]], nClasses=4))
set.seed(1)
ady_tot_uns96 <- (unsuperClass(ady_tot[[7]] + ady_tot[[8]] + ady_tot[[9]] + ady_tot[[10]] + ady_tot[[11]] + ady_tot[[12]], nClasses=4))
set.seed(1)
ady_tot_uns06 <- (unsuperClass(ady_tot[[13]] + ady_tot[[14]] + ady_tot[[15]] + ady_tot[[16]] + ady_tot[[17]] + ady_tot[[18]], nClasses=4))
set.seed(1)
ady_tot_uns16 <- (unsuperClass(ady_tot[[19]] + ady_tot[[20]] + ady_tot[[21]] + ady_tot[[22]] + ady_tot[[23]] + ady_tot[[24]], nClasses=4))
set.seed(1)
ady_tot_uns21 <- (unsuperClass(ady_tot[[25]] + ady_tot[[26]] + ady_tot[[27]] + ady_tot[[28]] + ady_tot[[29]] + ady_tot[[30]], nClasses=4))

par(mfrow=c(2,3),  # mar=c(2.5,2.5,2.5,2.5))  # x margini

plot(ady_tot_uns86$map, main="1986", col=cols3)
plot(ady_tot_uns96$map, main="1996", col=cols3)
plot(ady_tot_uns06$map, main="2006", col=cols3)
plot(ady_tot_uns16$map, main="2016", col=cols3)
plot(ady_tot_uns21$map, main="2021", col=cols3)

#ma visualizzazione sbagliata quindi provo con 
######
#ady_tot_uns <- (unsuperClass(ady_tot, nClasses=4))  ### rpoblema che non mi divide per anni!! ###
#plot(ady_tot_uns$map, col=tropical)


#par(mfrow=c(2,3),  mar=c(2.5,2.5,2.5,2.5))
#plot(ady_tot_uns[[1]]$map, col=tropical)
#plot(ady_un86_res$map, main="1986", col=cols3)
#plot(ady_un96_res$map, main="1996", col=cols3)
#plot(ady_un06_res$map,main="2006", col=cols3)
#plot(ady_un16_res$map,main="2016", col=cols3)
#plot(ady_un21_res$map, main="2021", col=cols3)


#### 
## provo a effettuare unsuperClass delle immagini (con piÃ¹ bande) dei vari anni e poi effettuo stack e ggplotto il tutto ##

set.seed(999)
ady_un86_res <- unsuperClass(ady86_res_crop, nClasses=10)
set.seed(999)
ady_un96_res <- unsuperClass(ady96_res_crop, nClasses=10)
set.seed(999)
ady_un06_res <- unsuperClass(ady06_res_crop, nClasses=10)
set.seed(999)
ady_un16_res <- unsuperClass(ady16_res_crop, nClasses=10)
set.seed(999)
ady_un21_res <- unsuperClass(ady21_res_crop, nClasses=10)

ady_tot <- stack(ady_un86_res, ady_un96_res, ady_un06_res, ady_un16_res, ady_un21_res)

gg86 <- ggplot() + geom_raster(ady_un86_res$map, mapping = aes(x = x, y = y, fill = layer)) + scale_fill_viridis() + ggtitle("1986")
gg96 <- ggplot() + geom_raster(ady_un96_res$map, mapping = aes(x = x, y = y, fill = layer)) + scale_fill_viridis() + ggtitle("1996")
gg06 <- ggplot() + geom_raster(ady_un06_res$map, mapping = aes(x = x, y = y, fill = layer)) + scale_fill_viridis() + ggtitle("2006")
gg16 <- ggplot() + geom_raster(ady_un16_res$map, mapping = aes(x = x, y = y, fill = layer)) + scale_fill_viridis() + ggtitle("2016")
gg21 <- ggplot() + geom_raster(ady_un21_res$map, mapping = aes(x = x, y = y, fill = layer)) + scale_fill_viridis() + ggtitle("2021")

grid.arrange(gg86, gg96, gg06, gg16, gg21, nrow=2)

## Fallito anche questo tentativo ##
######
---------------------------------------------------------------------------------------------------------------------------------------------------------
# Tentativo Supervised Classification #

ady86_res <- aggregate(ady86, fact=10) 
ady86_res2 <- aggregate(ady86_res, fact=2)
ady86_res2

ady86_res_un <- unsuperClass(ady86_res, nClasses=5)
plot(ady86_res_un$map)

plotRGB(ady86_res, 5, 4, 3, stretch="lin")
plotRGB(ady21_res, 5, 4, 3, stretch="lin")

--------------------------------------------------------------------------------------------------------



# create training points in mapview
points <- viewRGB(ady86_res2, r = 4, g = 3, b = 2)
editMap(points)

# save as clouds after first iteration
clouds <- points$finished$geometry %>%
st_sf(clouds)  
mutate(class = "clouds", id = 1)

# save as developed land second time
developed <- points$finished$geometry %>% st_sf() %>% mutate(class = "developed", id = 2)
# then save as undeveloped land after third iteration
undeveloped <- points$finished$geometry %>% st_sf() %>% mutate(class = "undeveloped", id = 3)
# finally save as water
water <- points$finished$geometry %>% st_sf() %>% mutate(class = "water", id = 4)




clouds <- points$all$geometry

$finished
Simple feature collection with 6 features and 2 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 145.4339 ymin: -17.76847 xmax: 145.7707 ymax: -16.70496
Geodetic CRS:  WGS 84
  X_leaflet_id feature_type                   geometry
1          557       marker  POINT (145.5469 -17.6605)
2          837       marker POINT (145.4339 -16.70496)
3         1231       marker  POINT (145.676 -17.60224)
4         1237       marker POINT (145.6718 -17.76847)
5         1470       marker POINT (145.7707 -17.24329)
6         1476       marker POINT (145.7309 -17.31938)

$all
Simple feature collection with 6 features and 2 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 145.4339 ymin: -17.76847 xmax: 145.7707 ymax: -16.70496
Geodetic CRS:  WGS 84
  X_leaflet_id feature_type                   geometry
1          557       marker  POINT (145.5469 -17.6605)
2          837       marker POINT (145.4339 -16.70496)
3         1231       marker  POINT (145.676 -17.60224)
4         1237       marker POINT (145.6718 -17.76847)
5         1470       marker POINT (145.7707 -17.24329)
6         1476       marker POINT (145.7309 -17.31938)


###### firme spettrali da non fare ###
##   FIRME SPETTRALI  ##

# Funzione plotRGB: ady 86
plotRGB(ady86, r=3, g=2, b=1, stretch="lin") # "lin": lineare, amplia i valori
# Bisogna avere la mappa fatta con plotRGB aperta sotto
# Funzione: click, usa immagine plotRGB per creare le firme spettrali 
click(ady86, id=T, xy=T, cell=T, type="p", pch=16, cex=4, col="yellow")

#    x        y     cell       X19860824_B2   X19860824_B3  X19860824_B4  X19860824_B5  X19860824_B6  X19860824_B7
# 1 348750 -1923780 27806972           8659           9763          9695         18754         15285         11263
# 2 302250 -1919970 26823585           8884           9499         10004         12860         14651         11939
# 3 365430 -1852620  9469596           8894           8334          7785          7849          7422          7355 
# 4 354660 -1957800 36574123           8133           8508          8171         17476         11105          8677

summary(348750,-1923780)

bande_ady86 <- c(1,2,3,4,5,6)
area_agricola_86 <- c(8659,9763,9695,18754,15285,11263)
area_rocciosa_86 <- c(8884,9499,10004,12860,14651,11939)
area_marina_86 <- c(8894,8334,7785,7849,7422,7355)
area_boscosa_86 <- c(8133,8508,8171,17476,11105,8677)
# Creo un data.frame

spectrals_86 <- data.frame(area_agricola_86, area_rocciosa_86, area_marina_86, area_boscosa_86)

# Carico file info (spectrals)
spectrals_86

#   area_agricola_86 area_rocciosa_86 area_marina_86 area_boscosa_86
# 1             8659             8884           8894            8133
# 2             9763             9499           8334            8508
# 3             9695            10004           7785            8171
# 4            18754            12860           7849           17476
# 5            15285            14651           7422           11105
# 6            11263            11939           7355            8677

# plotto firme spettrali
# uso funzione ggplot
# introduco funzione geom_line
# funzione labs per modificare eticheete, legende e plottaggio

spct_86 <- ggplot(spectrals_86, aes(x=bande_ady86)) +
 geom_line(aes(y=area_agricola_86), color="orange") +
 geom_line(aes(y=area_rocciosa_86), color="brown") +
 geom_line(aes(y=area_marina_86), color="blue") +
 geom_line(aes(y=area_boscosa_86), color="green") +
 labs(x="firma spettrale 1986",y="reflectance")
 
 

# Funzione plotRGB: ady 21
plotRGB(ady21, r=3, g=2, b=1, stretch="lin") # "lin": lineare, amplia i valori
# Bisogna avere la mappa fatta con plotRGB aperta sotto
# Funzione: click, usa immagine plotRGB per creare le firme spettrali 
click(ady21, id=T, xy=T, cell=T, type="p", pch=16, cex=4, col="yellow")

#        x        y     cell X20210825_B2 X20210825_B3 X20210825_B4 X20210825_B5 X20210825_B6 X20210825_B7
# 1 348960 -1922670 30095252         8423         9704         9162        22694        14978        10876
# 2 286440 -1968060 41563221         8196         8795         9173        13857        14661        11260
# 3 368910 -1851360 12075880         8313         8515         7098         7010         7543         7621
# 4 352530 -1967340 41383480         7673         8073         7822        15217        10392         8431



bande_ady21 <- c(1,2,3,4,5,6)
area_agricola_21 <- c(8423,9704,9162,22694,14978,10876)
area_rocciosa_21 <- c(8196,8795,9173,13857,14661,11260)
area_marina_21 <- c(8313,8515,7098,7010,7543,7621)
area_boscosa_21 <- c(7673,8073,7822,15217,10392,8431)


spectrals_21 <- data.frame(area_agricola_21, area_rocciosa_21, area_marina_21, area_boscosa_21)
spectrals_21

spct_21 <- ggplot(spectrals_21, aes(x=bande_ady21)) +
 geom_line(aes(y=area_agricola_21), color="orange") +
 geom_line(aes(y=area_rocciosa_21), color="brown") +
 geom_line(aes(y=area_marina_21), color="blue") +
 geom_line(aes(y=area_boscosa_21), color="green") +
 labs(x="firma spettrale 2021",y="reflectance")
 
 grid.arrange(spct_86, spct_21, nrow=2, top=textGrob("Confronto delle firme spettrali: 1986 - 2021"))

## PROBLEMI ##
#Plottare piÃ¹ immagini con unsuperclass ma con stessa colorazioni delle classi 
#
